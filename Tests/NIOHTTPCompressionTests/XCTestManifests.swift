#if !canImport(ObjectiveC)
import XCTest

extension HTTPResponseCompressorTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HTTPResponseCompressorTest = [
        ("testAlwaysPrefersHighestQValue", testAlwaysPrefersHighestQValue),
        ("testAsteriskMeansGzip", testAsteriskMeansGzip),
        ("testCanBeRemoved", testCanBeRemoved),
        ("testCanCompressDeflateWithAwkwardFlushes", testCanCompressDeflateWithAwkwardFlushes),
        ("testCanCompressGzipWithAwkwardFlushes", testCanCompressGzipWithAwkwardFlushes),
        ("testCanCompressSimpleBodies", testCanCompressSimpleBodies),
        ("testCanCompressSimpleBodiesGzip", testCanCompressSimpleBodiesGzip),
        ("testDoesNotBufferWritesNoAlgorithm", testDoesNotBufferWritesNoAlgorithm),
        ("testDoesNotCompressWithoutAcceptEncodingHeader", testDoesNotCompressWithoutAcceptEncodingHeader),
        ("testHandlesBasicQValues", testHandlesBasicQValues),
        ("testHandlesPipelinedRequestsProperly", testHandlesPipelinedRequestsProperly),
        ("testIgnoresUnknownAlgorithms", testIgnoresUnknownAlgorithms),
        ("testInfinityQValuePreventsChoice", testInfinityQValuePreventsChoice),
        ("testNaNQValuePreventsChoice", testNaNQValuePreventsChoice),
        ("testNegativeInfinityQValuePreventsChoice", testNegativeInfinityQValuePreventsChoice),
        ("testNonNumericQValuePreventsChoice", testNonNumericQValuePreventsChoice),
        ("testOutOfRangeQValuePreventsChoice", testOutOfRangeQValuePreventsChoice),
        ("testOverridesContentEncodingHeader", testOverridesContentEncodingHeader),
        ("testRemovingHandlerFailsPendingWrites", testRemovingHandlerFailsPendingWrites),
        ("testStartsWithSameUnicodeScalarsSaysNoForTheSameStringInDifferentNormalisations", testStartsWithSameUnicodeScalarsSaysNoForTheSameStringInDifferentNormalisations),
        ("testStartsWithSameUnicodeScalarsWorksOnEmptyStrings", testStartsWithSameUnicodeScalarsWorksOnEmptyStrings),
        ("testStartsWithSameUnicodeScalarsWorksOnLongerNeedleFalse", testStartsWithSameUnicodeScalarsWorksOnLongerNeedleFalse),
        ("testStartsWithSameUnicodeScalarsWorksOnPrefix", testStartsWithSameUnicodeScalarsWorksOnPrefix),
        ("testStartsWithSameUnicodeScalarsWorksOnSameStrings", testStartsWithSameUnicodeScalarsWorksOnSameStrings),
        ("testStartsWithSaysYesForTheSameStringInDifferentNormalisations", testStartsWithSaysYesForTheSameStringInDifferentNormalisations),
    ]
}

extension HTTPResponseDecompressorTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HTTPResponseDecompressorTest = [
        ("testDecompression", testDecompression),
        ("testDecompressionLimitRatio", testDecompressionLimitRatio),
        ("testDecompressionLimitSize", testDecompressionLimitSize),
        ("testDecompressionNoLimit", testDecompressionNoLimit),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(HTTPResponseCompressorTest.__allTests__HTTPResponseCompressorTest),
        testCase(HTTPResponseDecompressorTest.__allTests__HTTPResponseDecompressorTest),
    ]
}
#endif
