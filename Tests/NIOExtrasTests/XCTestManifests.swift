#if !canImport(ObjectiveC)
import XCTest

extension DebugInboundEventsHandlerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DebugInboundEventsHandlerTest = [
        ("testActive", testActive),
        ("testErrorCaught", testErrorCaught),
        ("testInactive", testInactive),
        ("testRead", testRead),
        ("testReadComplete", testReadComplete),
        ("testRegistered", testRegistered),
        ("testUnregistered", testUnregistered),
        ("testUserInboundEvent", testUserInboundEvent),
        ("testWritabilityChanged", testWritabilityChanged),
    ]
}

extension DebugOutboundEventsHandlerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DebugOutboundEventsHandlerTest = [
        ("testBind", testBind),
        ("testClose", testClose),
        ("testConnect", testConnect),
        ("testFlush", testFlush),
        ("testRead", testRead),
        ("testRegister", testRegister),
        ("testTriggerUserOutboundEvent", testTriggerUserOutboundEvent),
        ("testWrite", testWrite),
    ]
}

extension FixedLengthFrameDecoderTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FixedLengthFrameDecoderTest = [
        ("testBasicValidation", testBasicValidation),
        ("testDecodeIfFewerBytesAreSent", testDecodeIfFewerBytesAreSent),
        ("testDecodeIfMoreBytesAreSent", testDecodeIfMoreBytesAreSent),
        ("testRemoveHandlerWhenBufferIsEmpty", testRemoveHandlerWhenBufferIsEmpty),
        ("testRemoveHandlerWhenBufferIsNotEmpty", testRemoveHandlerWhenBufferIsNotEmpty),
    ]
}

extension JSONRPCFramingContentLengthHeaderDecoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONRPCFramingContentLengthHeaderDecoderTests = [
        ("testBasicMessage", testBasicMessage),
        ("testDripAndMassFeedMessages", testDripAndMassFeedMessages),
        ("testEmptyMessage", testEmptyMessage),
        ("testErrorNegativeContentLength", testErrorNegativeContentLength),
        ("testErrorNoContentLengthHeader", testErrorNoContentLengthHeader),
        ("testErrorNotANumberContentLength", testErrorNotANumberContentLength),
        ("testErrorNotEnoughDataAtEOF", testErrorNotEnoughDataAtEOF),
        ("testLongerMessage", testLongerMessage),
        ("testSomePointlessExtraHeaders", testSomePointlessExtraHeaders),
        ("testTechnicallyInvalidButWeAreNicePeople", testTechnicallyInvalidButWeAreNicePeople),
        ("testWrongCasing", testWrongCasing),
    ]
}

extension JSONRPCFramingContentLengthHeaderEncoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONRPCFramingContentLengthHeaderEncoderTests = [
        ("testEmptyMessage", testEmptyMessage),
        ("testRoundtrip", testRoundtrip),
    ]
}

extension LengthFieldBasedFrameDecoderTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LengthFieldBasedFrameDecoderTest = [
        ("testBasicVerification", testBasicVerification),
        ("testCloseInChannelRead", testCloseInChannelRead),
        ("testDecodeWithInt64HeaderStringBigEndian", testDecodeWithInt64HeaderStringBigEndian),
        ("testDecodeWithInt64HeaderStringDefaultingToBigEndian", testDecodeWithInt64HeaderStringDefaultingToBigEndian),
        ("testDecodeWithInt64HeaderWithString", testDecodeWithInt64HeaderWithString),
        ("testDecodeWithUInt16HeaderWithPartialBody", testDecodeWithUInt16HeaderWithPartialBody),
        ("testDecodeWithUInt16HeaderWithPartialHeader", testDecodeWithUInt16HeaderWithPartialHeader),
        ("testDecodeWithUInt16HeaderWithString", testDecodeWithUInt16HeaderWithString),
        ("testDecodeWithUInt32HeaderWithString", testDecodeWithUInt32HeaderWithString),
        ("testDecodeWithUInt64HeaderWithString", testDecodeWithUInt64HeaderWithString),
        ("testDecodeWithUInt8HeaderFrameSplitIncomingData", testDecodeWithUInt8HeaderFrameSplitIncomingData),
        ("testDecodeWithUInt8HeaderTwoFrames", testDecodeWithUInt8HeaderTwoFrames),
        ("testDecodeWithUInt8HeaderWithData", testDecodeWithUInt8HeaderWithData),
        ("testEmptyBuffer", testEmptyBuffer),
        ("testRemoveHandlerWhenBufferIsEmpty", testRemoveHandlerWhenBufferIsEmpty),
        ("testRemoveHandlerWhenBufferIsNotEmpty", testRemoveHandlerWhenBufferIsNotEmpty),
    ]
}

extension LengthFieldPrependerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LengthFieldPrependerTest = [
        ("testEmptyBuffer", testEmptyBuffer),
        ("testEncodeWithInt64HeaderStringDefaultingToBigEndian", testEncodeWithInt64HeaderStringDefaultingToBigEndian),
        ("testEncodeWithInt64HeaderWithString", testEncodeWithInt64HeaderWithString),
        ("testEncodeWithUInt16HeaderWithString", testEncodeWithUInt16HeaderWithString),
        ("testEncodeWithUInt32HeaderWithString", testEncodeWithUInt32HeaderWithString),
        ("testEncodeWithUInt64HeaderStringBigEndian", testEncodeWithUInt64HeaderStringBigEndian),
        ("testEncodeWithUInt64HeaderWithString", testEncodeWithUInt64HeaderWithString),
        ("testEncodeWithUInt8HeaderWithData", testEncodeWithUInt8HeaderWithData),
        ("testLargeBuffer", testLargeBuffer),
        ("testTooLargeForLengthField", testTooLargeForLengthField),
    ]
}

extension LineBasedFrameDecoderTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineBasedFrameDecoderTest = [
        ("testBasicValidation", testBasicValidation),
        ("testChannelInactiveWithLeftOverBytes", testChannelInactiveWithLeftOverBytes),
        ("testDecodeOneCharacterAtATime", testDecodeOneCharacterAtATime),
        ("testDripFedCRLN", testDripFedCRLN),
        ("testEmptyBuffer", testEmptyBuffer),
        ("testEmptyLine", testEmptyLine),
        ("testMoreDataAvailableWhenChannelBecomesInactive", testMoreDataAvailableWhenChannelBecomesInactive),
        ("testRemoveHandlerWhenBufferIsEmpty", testRemoveHandlerWhenBufferIsEmpty),
        ("testRemoveHandlerWhenBufferIsNotEmpty", testRemoveHandlerWhenBufferIsNotEmpty),
    ]
}

extension QuiescingHelperTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__QuiescingHelperTest = [
        ("testQuiesceUserEventReceivedOnShutdown", testQuiesceUserEventReceivedOnShutdown),
        ("testQuiescingDoesNotSwallowCloseErrorsFromAcceptHandler", testQuiescingDoesNotSwallowCloseErrorsFromAcceptHandler),
        ("testShutdownIsImmediateWhenNoChannelsCollected", testShutdownIsImmediateWhenNoChannelsCollected),
    ]
}

extension RequestResponseHandlerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RequestResponseHandlerTest = [
        ("testEnqueingMultipleRequestsWorks", testEnqueingMultipleRequestsWorks),
        ("testRequestsEnqueuedAfterErrorAreFailed", testRequestsEnqueuedAfterErrorAreFailed),
        ("testRequestsEnqueuedJustBeforeErrorAreFailed", testRequestsEnqueuedJustBeforeErrorAreFailed),
        ("testSimpleRequestWorks", testSimpleRequestWorks),
    ]
}

extension WritePCAPHandlerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WritePCAPHandlerTest = [
        ("testAcceptConnectionFromRemote", testAcceptConnectionFromRemote),
        ("testCloseOriginatingFromLocal", testCloseOriginatingFromLocal),
        ("testCloseOriginatingFromRemote", testCloseOriginatingFromRemote),
        ("testConnectIssuesThreePacketsForIPv4", testConnectIssuesThreePacketsForIPv4),
        ("testConnectIssuesThreePacketsForIPv6", testConnectIssuesThreePacketsForIPv6),
        ("testInboundData", testInboundData),
        ("testOutboundData", testOutboundData),
        ("testOversizedInboundDataComesAsTwoPacketsIPv4", testOversizedInboundDataComesAsTwoPacketsIPv4),
        ("testOversizedInboundDataComesAsTwoPacketsIPv6", testOversizedInboundDataComesAsTwoPacketsIPv6),
        ("testOversizedOutboundDataComesAsTwoPacketsIPv4", testOversizedOutboundDataComesAsTwoPacketsIPv4),
        ("testOversizedOutboundDataComesAsTwoPacketsIPv6", testOversizedOutboundDataComesAsTwoPacketsIPv6),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DebugInboundEventsHandlerTest.__allTests__DebugInboundEventsHandlerTest),
        testCase(DebugOutboundEventsHandlerTest.__allTests__DebugOutboundEventsHandlerTest),
        testCase(FixedLengthFrameDecoderTest.__allTests__FixedLengthFrameDecoderTest),
        testCase(JSONRPCFramingContentLengthHeaderDecoderTests.__allTests__JSONRPCFramingContentLengthHeaderDecoderTests),
        testCase(JSONRPCFramingContentLengthHeaderEncoderTests.__allTests__JSONRPCFramingContentLengthHeaderEncoderTests),
        testCase(LengthFieldBasedFrameDecoderTest.__allTests__LengthFieldBasedFrameDecoderTest),
        testCase(LengthFieldPrependerTest.__allTests__LengthFieldPrependerTest),
        testCase(LineBasedFrameDecoderTest.__allTests__LineBasedFrameDecoderTest),
        testCase(QuiescingHelperTest.__allTests__QuiescingHelperTest),
        testCase(RequestResponseHandlerTest.__allTests__RequestResponseHandlerTest),
        testCase(WritePCAPHandlerTest.__allTests__WritePCAPHandlerTest),
    ]
}
#endif
